#!/bin/sh

##############################################################################
# Scala code runner 2.6.0-final
##############################################################################
# (c) 2002-2007 LAMP/EPFL
#
# This is free software; see the distribution for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.
##############################################################################

cygwin=false;
darwin=false;
case "`uname`" in
    CYGWIN*) cygwin=true ;;
    Darwin*) darwin=true ;;
esac

# Finding the root folder for this Scala distribution
SOURCE=$0;
SCRIPT=`basename "$SOURCE"`;
while [ -h "$SOURCE" ]; do
    SCRIPT=`basename "$SOURCE"`;
    LOOKUP=`ls -ld "$SOURCE"`;
    TARGET=`expr "$LOOKUP" : '.*-> \(.*\)$'`;
    if expr "${TARGET:-.}/" : '/.*/$' > /dev/null; then
        SOURCE=${TARGET:-.};
    else
        SOURCE=`dirname "$SOURCE"`/${TARGET:-.};
    fi;
done;
SCALA_HOME=`dirname "$SOURCE"`/..;
SCALA_HOME=`cd "$SCALA_HOME"; pwd`;

SCALA_HOME=/usr/local/share/scala

if $cygwin; then
    SCALA_HOME=`cygpath --windows --short-name "$SCALA_HOME"`
    SCALA_HOME=`cygpath --unix "$SCALA_HOME"`
fi

# Constructing the extension classpath
EXTENSION_CLASSPATH=""
if [ -z "$EXTENSION_CLASSPATH" ] ; then
    for ext in `ls -d "$SCALA_HOME"/lib/*` ; do
        if [ -z "$EXTENSION_CLASSPATH" ] ; then
            EXTENSION_CLASSPATH="$ext"
        else
            EXTENSION_CLASSPATH="$EXTENSION_CLASSPATH:$ext"
        fi
    done
fi

# Setting the boot class-path to be the standard library (either as a JAR or a folder)
BOOT_CLASSPATH=""
if [ -z "$BOOT_CLASSPATH" ] ; then
    if [ -f "$SCALA_HOME/lib/scala-library.jar" ] ; then
        BOOT_CLASSPATH="$SCALA_HOME/lib/scala-library.jar"
    elif [ -d "$SCALA_HOME/lib/library" ] ; then
        BOOT_CLASSPATH="$SCALA_HOME/lib/library"
    fi
fi

if $cygwin; then
    if [ "$OS" = "Windows_NT" ] && cygpath -m .>/dev/null 2>/dev/null ; then
        format=mixed
    else
        format=windows
    fi
    SCALA_HOME=`cygpath --$format "$SCALA_HOME"`
    EXTENSION_CLASSPATH=`cygpath --path --$format "$EXTENSION_CLASSPATH"`
    BOOT_CLASSPATH=`cygpath --path --$format "$BOOT_CLASSPATH"`
fi

#SCALA_HOME=/usr/local/share/scala
TC_SCALA_ACTORS_CONFIG_FILE=/Users/jonas/src/java/tc-forge/projects/tim-scala-actors-2.6.1/trunk/src/samples/resources/clustered-scala-actors.conf
TC_CONFIG_FILE=/Users/jonas/src/java/tc-forge/projects/tim-scala-actors-2.6.1/trunk/src/samples/resources/tc-config.xml
TC_INSTALL_DIR=/Users/jonas/src/java/tc/code/base/build/dist/terracotta-trunk-rev6814
TC_BOOT_JAR="$TC_INSTALL_DIR"/lib/dso-boot/dso-boot-hotspot_osx_150_13.jar
TC_TIM_SCALA_ACTORS_JAR=/Users/jonas/.m2/repository/org/terracotta/modules/clustered-scala-actors-2.6.1/2.6.0-SNAPSHOT/clustered-scala-actors-2.6.1-2.6.0-SNAPSHOT.jar


#-Dtc.classloader.writeToDisk=true \
${JAVACMD:=java} ${JAVA_OPTS:=-Xmx256M -Xms256M} \
-Xbootclasspath/p:"$TC_BOOT_JAR" \
-Dtc.install-root="$TC_INSTALL_DIR" \
-Dtc.config="$TC_CONFIG_FILE" \
-Dclustered.scala.actors.config="$TC_SCALA_ACTORS_CONFIG_FILE" \
-Dscala.home="$SCALA_HOME" \
-Denv.classpath="$CLASSPATH" \
-Denv.emacs="$EMACS" \
-cp "$BOOT_CLASSPATH":"$EXTENSION_CLASSPATH":"$TC_TIM_SCALA_ACTORS_JAR" \
scala.tools.nsc.MainGenericRunner  "$@"

